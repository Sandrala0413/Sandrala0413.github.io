{"title":"UVa 255 - Correct Move 解題紀錄","uid":"b96fbff16cb7e065a8d2f5e9a45ac26c","slug":"uva-255","date":"2025-05-08T11:09:19.000Z","updated":"2025-09-24T20:43:05.510Z","comments":true,"path":"api/articles/uva-255.json","keywords":null,"cover":"https://i.pinimg.com/736x/6f/c4/90/6fc490be1996aaf3177a6c9e19d5bd00.jpg","content":"<p>這題其實不難，就是讀題目讀的我很煩…英文能力仍需加強阿三三</p>\n<h2 id=\"📝-題目簡介\"><a href=\"#📝-題目簡介\" class=\"headerlink\" title=\"📝 題目簡介\"></a>📝 題目簡介</h2><p>有一個 8x8 的棋盤，總共有 64 格位置，編號從 0 到 63。棋盤上有兩個棋子：國王 (King) 和 皇后 (Queen)。每次我們會給定一個棋盤狀態，其中包含國王和皇后的位置，以及皇后計算出的新位置</p>\n<p><img src=\"/../imgs/image.png\" alt=\"棋盤\"></p>\n<ul>\n<li><p>legal state：如果國王和皇后不在同一位置。</p>\n</li>\n<li><p>legal move：國王和皇后根據規則移動。</p>\n</li>\n<li><p>allowed move：當國王和皇后移動後，它們不會移動到對方能夠移動到的位置。</p>\n</li>\n</ul>\n<h4 id=\"棋盤移動規則\"><a href=\"#棋盤移動規則\" class=\"headerlink\" title=\"棋盤移動規則\"></a>棋盤移動規則</h4><ul>\n<li><p>king：國王可以每次移動一格，方向是水平或垂直，不能到達皇后所在的位置</p>\n</li>\n<li><p>queen：皇后可以移動一格或多格，方向是水平或垂直，不能到達國王所在的位置</p>\n</li>\n<li><p>禁止king、queen移動到同一位置</p>\n</li>\n</ul>\n<hr>\n<h2 id=\"📌-題目輸入格式\"><a href=\"#📌-題目輸入格式\" class=\"headerlink\" title=\"📌 題目輸入格式\"></a>📌 題目輸入格式</h2><ul>\n<li><p>每行包含三個整數，分別是國王、皇后和皇后計算出來的新位置（範圍為 0 至 63）</p>\n</li>\n<li><p>需要判斷輸入是否符合上述條件</p>\n</li>\n</ul>\n<h2 id=\"📌-題目輸出格式\"><a href=\"#📌-題目輸出格式\" class=\"headerlink\" title=\"📌 題目輸出格式\"></a>📌 題目輸出格式</h2><ul>\n<li><p>Illegal state：如果國王和皇后在同一格上</p>\n</li>\n<li><p>Illegal move：如果狀態是合法的，但皇后的移動不符合規則</p>\n</li>\n<li><p>Move not allowed：如果狀態合法且皇后移動符合規則，但移動會使國王和皇后移動到對方的合法位置。</p>\n</li>\n<li><p>Continue：如果國王和皇后移動後的狀態合法，並且國王仍然有合法的移動。</p>\n</li>\n<li><p>Stop：如果國王在移動後無法合法移動，處於被鎖死狀態。</p>\n</li>\n</ul>\n<hr>\n<h2 id=\"📌-題目範例輸入\"><a href=\"#📌-題目範例輸入\" class=\"headerlink\" title=\"📌 題目範例輸入\"></a>📌 題目範例輸入</h2><p>17 17 49<br>17 49 56<br>17 49 9<br>17 49 17<br>17 49 25<br>17 49 33<br>17 49 41<br>17 49 49<br>56 48 49</p>\n<h2 id=\"📌-題目範例輸出\"><a href=\"#📌-題目範例輸出\" class=\"headerlink\" title=\"📌 題目範例輸出\"></a>📌 題目範例輸出</h2><p>Illegal state<br>Illegal move<br>Illegal move<br>Illegal move<br>Move not allowed<br>Continue<br>Continue<br>Illegal move<br>Stop</p>\n<hr>\n<h2 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h2><ul>\n<li>位置 % 8 可以得到 x 座標(左至右)</li>\n<li>位置 &#x2F; 8 可以得到 y 座標(上至下)</li>\n<li>stop 可以直接鎖死四個角來判斷，因為只有 king 在四個角時才有可能不能移動</li>\n</ul>\n<h2 id=\"💻-Java-程式碼實作\"><a href=\"#💻-Java-程式碼實作\" class=\"headerlink\" title=\"💻 Java 程式碼實作\"></a>💻 Java 程式碼實作</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import java.util.*;</span><br><span class=\"line\"></span><br><span class=\"line\">public class Main&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    public static boolean isBetween(int queen, int king, int queen2)&#123;</span><br><span class=\"line\">        if(queen2 &gt; queen)&#123;</span><br><span class=\"line\">            int tmp = queen2;</span><br><span class=\"line\">            queen2 = queen;</span><br><span class=\"line\">            queen = tmp;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        if(queen &gt; king &amp;&amp; king &gt; queen2)&#123;</span><br><span class=\"line\">            return true;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return false;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public static void main(String[] args)&#123;</span><br><span class=\"line\">        Scanner in = new Scanner(System.in);</span><br><span class=\"line\"></span><br><span class=\"line\">        while(in.hasNext())&#123;</span><br><span class=\"line\">            int king = in.nextInt();</span><br><span class=\"line\">            int queen = in.nextInt();</span><br><span class=\"line\">            int queen2 = in.nextInt();</span><br><span class=\"line\"></span><br><span class=\"line\">            if(king == queen)&#123;</span><br><span class=\"line\">                System.out.println(&quot;Illegal state&quot;);</span><br><span class=\"line\">                continue;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            int kingX = king % 8;</span><br><span class=\"line\">            int kingY = king / 8;</span><br><span class=\"line\">            int queenX = queen % 8;</span><br><span class=\"line\">            int queenY = queen / 8;</span><br><span class=\"line\">            int queen2X = queen2 % 8;</span><br><span class=\"line\">            int queen2Y = queen2 / 8;</span><br><span class=\"line\"></span><br><span class=\"line\">            boolean illegalMove = false;</span><br><span class=\"line\">            if(queenX != queen2X &amp;&amp; queenY != queen2Y)&#123;     //queen moves diagonally</span><br><span class=\"line\">                illegalMove = true;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            else if(queen == queen2 || queen2 == king)&#123;      </span><br><span class=\"line\">                illegalMove = true;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            //queen2 across king</span><br><span class=\"line\">            else if((queenX == kingX &amp;&amp; queenX == queen2X &amp;&amp; isBetween(queenY, kingY, queen2Y)) || (queenY == kingY &amp;&amp; queenY == queen2Y &amp;&amp; isBetween(queenX, kingX, queen2X)))&#123;</span><br><span class=\"line\">                illegalMove = true;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            if(illegalMove)&#123;</span><br><span class=\"line\">                System.out.println(&quot;Illegal move&quot;);</span><br><span class=\"line\">                continue;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            if((king + 1 == queen2 &amp;&amp; queen2X != 0) || (king - 1 == queen2 &amp;&amp; queen2X != 7) || (king + 8 == queen2) || (king - 8 == queen2))&#123;</span><br><span class=\"line\">                System.out.println(&quot;Move not allowed&quot;);</span><br><span class=\"line\">                continue;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            if((queen2 == 9 &amp;&amp; king == 0) || (queen2 == 14 &amp;&amp; king == 7) || (queen2 == 49 &amp;&amp; king == 56) || (queen2 == 54 &amp;&amp; king == 63))&#123;</span><br><span class=\"line\">                System.out.println(&quot;Stop&quot;);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            else&#123;</span><br><span class=\"line\">                System.out.println(&quot;Continue&quot;);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<p>碎碎念時間，好幾天沒練習了，上周六參加 PMI 專案管理競賽的台灣區決審，雖然技術層面上跟資工沒有太大的相關，但想著可以累積 PM 專案管理相關的經驗也不錯，還是投入很多心力在準備，為了這個比賽已經忙一個多月</p>\n<p>剛開始準備的時候真的完全摸不著頭緒，第一專案管理、商業分析啥的對一個純理工女真的太抽象嗚嗚，再來比賽規則可能是因為台灣區才第二年辦這個比賽，所以規則也不太明確，一下子說只需初審只需繳交十頁左右的計畫書，後來又說改成最多 60 頁的完整專案計畫書，我們也秉持著寫好寫滿的原則，狠狠的肝了許多 PMBOK 啥的專案管理的專業書籍，最後也寫出了 60 頁交出去初審，也順利進了決審，隔一週決審</p>\n<p>沒想到比寫專案計畫書還頭痛的事情來了，首先我們做的簡報真的醜的達咩爹斯，非常理工直男風，那個禮拜幾乎都在搞美編，真的把我美術細胞都榨乾了，後來又發現決審的簡報時間只有 15 分鐘，但我們整整有110 幾頁 ppt ，接著一天內的時間又緊急刪減了十幾頁，後來大家是用飆車的速度才順利講完</p>\n<p>比賽當天被告知 QA 是以同問同答的方式，我第一次體驗，還好當天比賽蠻順利的，隊友也給力，誰能想到比賽前一次練習我們都還沒壓縮好簡報時間呢，果然是需要一點腎上腺素爆發，結果也很幸運有進前三名，下個月就要代表台灣區比國際賽啦，祝我們繼續順利吧!!</p>\n","text":"這題其實不難，就是讀題目讀的我很煩…英文能力仍需加強阿三三 📝 題目簡介有一個 8x8 的棋盤，總共有 64 格位置，編號從 0 到 63。棋盤上有兩個棋子：國...","permalink":"/post/uva-255","photos":[],"count_time":{"symbolsCount":"4k","symbolsTime":"4 mins."},"categories":[{"name":"UVa","slug":"UVa","count":16,"path":"api/categories/UVa.json"}],"tags":[{"name":"Java","slug":"Java","count":15,"path":"api/tags/Java.json"},{"name":"UVa-⭐⭐","slug":"UVa-⭐⭐","count":3,"path":"api/tags/UVa-⭐⭐.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%F0%9F%93%9D-%E9%A1%8C%E7%9B%AE%E7%B0%A1%E4%BB%8B\"><span class=\"toc-text\">📝 題目簡介</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%A3%8B%E7%9B%A4%E7%A7%BB%E5%8B%95%E8%A6%8F%E5%89%87\"><span class=\"toc-text\">棋盤移動規則</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%F0%9F%93%8C-%E9%A1%8C%E7%9B%AE%E8%BC%B8%E5%85%A5%E6%A0%BC%E5%BC%8F\"><span class=\"toc-text\">📌 題目輸入格式</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%F0%9F%93%8C-%E9%A1%8C%E7%9B%AE%E8%BC%B8%E5%87%BA%E6%A0%BC%E5%BC%8F\"><span class=\"toc-text\">📌 題目輸出格式</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%F0%9F%93%8C-%E9%A1%8C%E7%9B%AE%E7%AF%84%E4%BE%8B%E8%BC%B8%E5%85%A5\"><span class=\"toc-text\">📌 題目範例輸入</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%F0%9F%93%8C-%E9%A1%8C%E7%9B%AE%E7%AF%84%E4%BE%8B%E8%BC%B8%E5%87%BA\"><span class=\"toc-text\">📌 題目範例輸出</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E9%A1%8C%E6%80%9D%E8%B7%AF\"><span class=\"toc-text\">解題思路</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%F0%9F%92%BB-Java-%E7%A8%8B%E5%BC%8F%E7%A2%BC%E5%AF%A6%E4%BD%9C\"><span class=\"toc-text\">💻 Java 程式碼實作</span></a></li></ol>","author":{"name":"三三","slug":"blog-author","avatar":"https://i.imgur.com/zzSYOPK.jpg","link":"/","description":"一個努力學習技術的小小資工人","socials":{"github":"https://github.com/Sandrala0413","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"UVa 496 - Simply Subsets 解題紀錄","uid":"96b15b957aec68c6e206ab179f6d8ea3","slug":"uva-496","date":"2025-05-21T06:35:10.000Z","updated":"2025-05-22T12:19:51.173Z","comments":true,"path":"api/articles/uva-496.json","keywords":null,"cover":"https://i.pinimg.com/736x/84/95/5a/84955a83a5d6dfb2ce3b6bcd1b576728.jpg","text":"📘 題目簡述判斷集合之間的關係 📥 輸入格式每兩行輸入代表兩個 set ，第一個為 set A ，第二個為 set B 📤 輸出格式針對每對 set A 、 B...","permalink":"/post/uva-496","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"UVa","slug":"UVa","count":16,"path":"api/categories/UVa.json"}],"tags":[{"name":"Java","slug":"Java","count":15,"path":"api/tags/Java.json"},{"name":"UVa-⭐","slug":"UVa-⭐","count":13,"path":"api/tags/UVa-⭐.json"}],"author":{"name":"三三","slug":"blog-author","avatar":"https://i.imgur.com/zzSYOPK.jpg","link":"/","description":"一個努力學習技術的小小資工人","socials":{"github":"https://github.com/Sandrala0413","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"UVa 490 - Rotating Sentences 解題紀錄","uid":"dc122d27be58fabbad4723eec95ffb99","slug":"uva-490","date":"2025-05-06T19:25:13.000Z","updated":"2025-05-22T12:19:42.633Z","comments":true,"path":"api/articles/uva-490.json","keywords":null,"cover":"https://imgur.com/qKaIC6c.jpg","text":"📘 題目簡述把輸入檔案由最後一行開始，由上至下轉置輸出 📥 輸入格式給定最多 100 行 sentence ，每行不超過 100 個字元 📤 輸出格式從最後一行...","permalink":"/post/uva-490","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[{"name":"UVa","slug":"UVa","count":16,"path":"api/categories/UVa.json"}],"tags":[{"name":"Java","slug":"Java","count":15,"path":"api/tags/Java.json"},{"name":"UVa-⭐","slug":"UVa-⭐","count":13,"path":"api/tags/UVa-⭐.json"}],"author":{"name":"三三","slug":"blog-author","avatar":"https://i.imgur.com/zzSYOPK.jpg","link":"/","description":"一個努力學習技術的小小資工人","socials":{"github":"https://github.com/Sandrala0413","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}