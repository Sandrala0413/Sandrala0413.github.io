<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="https://sandrala0413.git/atom.xml" rel="self"/>
  
  <link href="https://sandrala0413.git/"/>
  <updated>2025-05-01T12:55:18.346Z</updated>
  <id>https://sandrala0413.git/</id>
  
  <author>
    <name>Sandrala Tsai</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>UVA/CPE 409 - Excuses, Excuses! 解題筆記</title>
    <link href="https://sandrala0413.git/post/UVA-409.html"/>
    <id>https://sandrala0413.git/post/UVA-409.html</id>
    <published>2025-05-01T12:37:41.000Z</published>
    <updated>2025-05-01T12:55:18.346Z</updated>
    
    <content type="html"><![CDATA[<h2 id="📘-題目簡述"><a href="#📘-題目簡述" class="headerlink" title="📘 題目簡述"></a>📘 題目簡述</h2><p>Judge Ito 想找出藉口最多「爛藉口關鍵字」的藉口。每一組資料包含若干關鍵字與藉口，找出那些包含關鍵字最多次的藉口。</p><hr><h2 id="📥-輸入格式"><a href="#📥-輸入格式" class="headerlink" title="📥 輸入格式"></a>📥 輸入格式</h2><ul><li>每組關鍵字皆為全小寫、長度 1~20，且只有英文字母。</li><li>每行藉口最大長度為 70，內容可含任意大小寫字母、數字、空格與下列標點符號：<code>. , ! ?</code></li></ul><hr><h2 id="📤-輸出格式"><a href="#📤-輸出格式" class="headerlink" title="📤 輸出格式"></a>📤 輸出格式</h2><ul><li>每組輸出以 <code>Excuse Set #X</code> 為開頭，X 為組別編號（從 1 開始）。</li><li>然後印出 <strong>關鍵字出現最多次</strong>的藉口（可多個，順序不限）。</li><li>每組輸出之間需空一行。</li></ul><hr><h2 id="🧠-判斷關鍵字出現規則"><a href="#🧠-判斷關鍵字出現規則" class="headerlink" title="🧠 判斷關鍵字出現規則"></a>🧠 判斷關鍵字出現規則</h2><ul><li><strong>不分大小寫比對</strong></li><li><strong>只比對整個單字</strong>，不能是字的一部分，例如：<ul><li>關鍵字 <code>dog</code>，在 <code>dog.</code>、<code>my-dog</code>、<code>dog!</code> 都算</li><li>在 <code>doggie</code> 中則不算</li></ul></li></ul><hr><h2 id="📌-題目範例輸入"><a href="#📌-題目範例輸入" class="headerlink" title="📌 題目範例輸入"></a>📌 題目範例輸入</h2><p>5 3<br>dog<br>ate<br>homework<br>canary<br>died<br>My dog ate my homework.<br>Can you believe my dog died after eating my canary… AND MY HOMEWORK?<br>This excuse is so good that it contain 0 keywords.<br>6 5<br>superhighway<br>crazy<br>thermonuclear<br>bedroom<br>war<br>building<br>I am having a superhighway built in my bedroom.<br>I am actually crazy.<br>1234567890…..,,,,,0987654321?????!!!!!!<br>There was a thermonuclear war!<br>I ate my dog, my canary, and my homework … note outdated keywords?</p><hr><h2 id="📌-題目範例輸出"><a href="#📌-題目範例輸出" class="headerlink" title="📌 題目範例輸出"></a>📌 題目範例輸出</h2><p>Excuse Set #1<br>Can you believe my dog died after eating my canary… AND MY HOMEWORK?<br>Excuse Set #2<br>I am having a superhighway built in my bedroom.<br>There was a thermonuclear war!</p><h2 id="Java程式碼實作"><a href="#Java程式碼實作" class="headerlink" title="Java程式碼實作"></a>Java程式碼實作</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">import java.util.*;</span><br><span class="line"></span><br><span class="line">public class Main&#123;</span><br><span class="line">    public static void main(String[] args)&#123;</span><br><span class="line">        Scanner in = new Scanner(System.in);</span><br><span class="line"></span><br><span class="line">        int index = 1;</span><br><span class="line">        while(in.hasNext())&#123;</span><br><span class="line">            int n = in.nextInt();   //# of keywords</span><br><span class="line">            int m = in.nextInt();   //# of excues</span><br><span class="line">            in.nextLine();</span><br><span class="line">            String[] keyword_list = new String[n];</span><br><span class="line">            String[] excue_list = new String[m];</span><br><span class="line">            </span><br><span class="line">            for(int i = 0; i &lt; n; i++)  keyword_list[i] = in.nextLine();</span><br><span class="line">            for(int i = 0; i &lt; m; i ++) excue_list[i] = in.nextLine();</span><br><span class="line"></span><br><span class="line">            int[] times = new int[m];</span><br><span class="line">            int max = -1;</span><br><span class="line">            for(int i = 0; i &lt; m; i++)&#123;</span><br><span class="line">                int tmp = 0;</span><br><span class="line">                String[] str = excue_list[i].split(&quot;[^a-zA-Z]+&quot;);</span><br><span class="line">                for(int j = 0; j &lt; n; j ++)&#123;</span><br><span class="line">                    for(int k = 0; k &lt; str.length; k++)&#123;</span><br><span class="line">                        if(str[k].toLowerCase().equals(keyword_list[j]))&#123;</span><br><span class="line">                            tmp++;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                if(tmp &gt; max)   max = tmp;</span><br><span class="line">                times[i] = tmp;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            System.out.println(&quot;Excuse Set #&quot; + index);</span><br><span class="line">            for(int i = 0; i &lt; m; i++)&#123;</span><br><span class="line">                if(times[i] == max)&#123;</span><br><span class="line">                    System.out.println(excue_list[i]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(&quot;&quot;);</span><br><span class="line"></span><br><span class="line">            index++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;📘-題目簡述&quot;&gt;&lt;a href=&quot;#📘-題目簡述&quot; class=&quot;headerlink&quot; title=&quot;📘 題目簡述&quot;&gt;&lt;/a&gt;📘 題目簡述&lt;/h2&gt;&lt;p&gt;Judge Ito 想找出藉口最多「爛藉口關鍵字」的藉口。每一組資料包含若干關鍵字與藉口，找出那些包</summary>
      
    
    
    
    
    <category term="UVA" scheme="https://sandrala0413.git/tags/UVA/"/>
    
  </entry>
  
  <entry>
    <title>UVACPE 401 - Palindromes 解題紀錄</title>
    <link href="https://sandrala0413.git/post/UVA-401.html"/>
    <id>https://sandrala0413.git/post/UVA-401.html</id>
    <published>2025-05-01T12:27:06.000Z</published>
    <updated>2025-05-01T12:53:32.802Z</updated>
    
    <content type="html"><![CDATA[<h1 id="🪞-字串分類問題筆記：Palindrome-與-Mirrored-String"><a href="#🪞-字串分類問題筆記：Palindrome-與-Mirrored-String" class="headerlink" title="🪞 字串分類問題筆記：Palindrome 與 Mirrored String"></a>🪞 字串分類問題筆記：Palindrome 與 Mirrored String</h1><h2 id="📌-題目說明"><a href="#📌-題目說明" class="headerlink" title="📌 題目說明"></a>📌 題目說明</h2><p>給定一組輸入字串，請判斷其屬於以下哪一類：</p><ul><li><strong>不是 Palindrome，也不是 Mirrored String</strong>：<br><code>-- is not a palindrome.</code></li><li><strong>是 Palindrome，但不是 Mirrored String</strong>：<br><code>-- is a regular palindrome.</code></li><li><strong>是 Mirrored String，但不是 Palindrome</strong>：<br><code>-- is a mirrored string.</code></li><li><strong>同時是 Palindrome 與 Mirrored String</strong>：<br><code>-- is a mirrored palindrome.</code></li></ul><hr><h2 id="🔁-名詞解釋"><a href="#🔁-名詞解釋" class="headerlink" title="🔁 名詞解釋"></a>🔁 名詞解釋</h2><table><thead><tr><th>名稱</th><th>說明</th><th>範例</th></tr></thead><tbody><tr><td><strong>Palindrome</strong></td><td>正反都一樣的字串</td><td><code>ABCDEDCBA</code></td></tr><tr><td><strong>Mirrored String</strong></td><td>把每個字元換成「對應的鏡像字元」，再反過來看仍等於原字串</td><td><code>3AIAE</code></td></tr><tr><td><strong>Mirrored Palindrome</strong></td><td>同時符合 Palindrome 和 Mirrored String</td><td><code>ATOYOTA</code></td></tr></tbody></table><hr><h2 id="🔄-鏡像字元對照表"><a href="#🔄-鏡像字元對照表" class="headerlink" title="🔄 鏡像字元對照表"></a>🔄 鏡像字元對照表</h2><table><thead><tr><th>字元</th><th>鏡像</th><th>字元</th><th>鏡像</th><th>字元</th><th>鏡像</th></tr></thead><tbody><tr><td>A</td><td>A</td><td>M</td><td>M</td><td>Y</td><td>Y</td></tr><tr><td>B</td><td></td><td>N</td><td></td><td>Z</td><td>5</td></tr><tr><td>C</td><td></td><td>O</td><td>O</td><td>1</td><td>1</td></tr><tr><td>D</td><td></td><td>P</td><td></td><td>2</td><td>S</td></tr><tr><td>E</td><td>3</td><td>Q</td><td></td><td>3</td><td>E</td></tr><tr><td>F</td><td></td><td>R</td><td></td><td>4</td><td></td></tr><tr><td>G</td><td></td><td>S</td><td>2</td><td>5</td><td>Z</td></tr><tr><td>H</td><td>H</td><td>T</td><td>T</td><td>6</td><td></td></tr><tr><td>I</td><td>I</td><td>U</td><td>U</td><td>7</td><td></td></tr><tr><td>J</td><td>L</td><td>V</td><td>V</td><td>8</td><td>8</td></tr><tr><td>K</td><td></td><td>W</td><td>W</td><td>9</td><td></td></tr><tr><td>L</td><td>J</td><td>X</td><td>X</td><td></td><td></td></tr></tbody></table><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p>⚠️ 注意：<strong>0（零）不被視為合法字元，只接受 O（英文字母）</strong></p></blockquote><hr><h2 id="📌-題目輸入格式"><a href="#📌-題目輸入格式" class="headerlink" title="📌 題目輸入格式"></a>📌 題目輸入格式</h2><ul><li>每行輸入包含1-20個有效字元(不會有無效字元出現)</li><li>讀到EOF結束</li></ul><hr><h2 id="📌-題目範例輸入"><a href="#📌-題目範例輸入" class="headerlink" title="📌 題目範例輸入"></a>📌 題目範例輸入</h2><p>NOTAPALINDROME<br>ISAPALINILAPASI<br>2A3MEAS<br>ATOYOTA</p><h2 id="📌-題目範例輸出"><a href="#📌-題目範例輸出" class="headerlink" title="📌 題目範例輸出"></a>📌 題目範例輸出</h2><p>NOTAPALINDROME – is not a palindrome.</p><p>ISAPALINILAPASI – is a regular palindrome.</p><p>2A3MEAS – is a mirrored string.</p><p>ATOYOTA – is a mirrored palindrome.</p><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p>⚠️ 注意：每個輸出之間後面都要空一行</p></blockquote><hr><h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><p>直覺做</p><h3 id="step1-判斷是否為-Palindrome："><a href="#step1-判斷是否為-Palindrome：" class="headerlink" title="step1:判斷是否為 Palindrome："></a>step1:判斷是否為 Palindrome：</h3><ul><li>判斷字串正反是否相同即可。</li></ul><h3 id="step-2判斷是否為-Mirrored-String："><a href="#step-2判斷是否為-Mirrored-String：" class="headerlink" title="step:2判斷是否為 Mirrored String："></a>step:2判斷是否為 Mirrored String：</h3><ol><li>將每個字元換成其鏡像（若無對應則不合法）。</li><li>換完後反轉字串，看是否與原字串相同。</li></ol><h2 id="💻-Java-程式碼實作"><a href="#💻-Java-程式碼實作" class="headerlink" title="💻 Java 程式碼實作"></a>💻 Java 程式碼實作</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        Map&lt;Character, Character&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;Character, Character&gt;();</span><br><span class="line">        map.put(<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;A&#x27;</span>); map.put(<span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;3&#x27;</span>);</span><br><span class="line">        map.put(<span class="string">&#x27;H&#x27;</span>, <span class="string">&#x27;H&#x27;</span>); map.put(<span class="string">&#x27;I&#x27;</span>, <span class="string">&#x27;I&#x27;</span>);</span><br><span class="line">        map.put(<span class="string">&#x27;J&#x27;</span>, <span class="string">&#x27;L&#x27;</span>); map.put(<span class="string">&#x27;L&#x27;</span>, <span class="string">&#x27;J&#x27;</span>);</span><br><span class="line">        map.put(<span class="string">&#x27;M&#x27;</span>, <span class="string">&#x27;M&#x27;</span>); map.put(<span class="string">&#x27;O&#x27;</span>, <span class="string">&#x27;O&#x27;</span>);</span><br><span class="line">        map.put(<span class="string">&#x27;S&#x27;</span>, <span class="string">&#x27;2&#x27;</span>); map.put(<span class="string">&#x27;T&#x27;</span>, <span class="string">&#x27;T&#x27;</span>);</span><br><span class="line">        map.put(<span class="string">&#x27;U&#x27;</span>, <span class="string">&#x27;U&#x27;</span>); map.put(<span class="string">&#x27;V&#x27;</span>, <span class="string">&#x27;V&#x27;</span>);</span><br><span class="line">        map.put(<span class="string">&#x27;W&#x27;</span>, <span class="string">&#x27;W&#x27;</span>); map.put(<span class="string">&#x27;X&#x27;</span>, <span class="string">&#x27;X&#x27;</span>);</span><br><span class="line">        map.put(<span class="string">&#x27;Y&#x27;</span>, <span class="string">&#x27;Y&#x27;</span>); map.put(<span class="string">&#x27;Z&#x27;</span>, <span class="string">&#x27;5&#x27;</span>);</span><br><span class="line">        map.put(<span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;1&#x27;</span>); map.put(<span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;S&#x27;</span>);</span><br><span class="line">        map.put(<span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;E&#x27;</span>); map.put(<span class="string">&#x27;5&#x27;</span>, <span class="string">&#x27;Z&#x27;</span>);</span><br><span class="line">        map.put(<span class="string">&#x27;8&#x27;</span>, <span class="string">&#x27;8&#x27;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(in.hasNext())&#123;</span><br><span class="line">            <span class="type">boolean</span> <span class="variable">p</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">            <span class="type">boolean</span> <span class="variable">m</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">            <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> in.nextLine();</span><br><span class="line"></span><br><span class="line">            <span class="type">StringBuilder</span> <span class="variable">str2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>(str);</span><br><span class="line">            <span class="keyword">if</span>(str.equals(str2.reverse().toString()))&#123;</span><br><span class="line">                p = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; str.length(); i++)&#123;</span><br><span class="line">                <span class="type">char</span> <span class="variable">ch</span> <span class="operator">=</span> str.charAt(i);</span><br><span class="line">                <span class="type">char</span> <span class="variable">ch2</span> <span class="operator">=</span> str.charAt(str.length() - i - <span class="number">1</span>);</span><br><span class="line">                <span class="keyword">if</span>(!map.containsKey(ch) || map.get(ch) != ch2)&#123;</span><br><span class="line">                    m = <span class="literal">false</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(p &amp;&amp; m)          System.out.println(str + <span class="string">&quot; -- is a mirrored palindrome.&quot;</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(p)     System.out.println(str + <span class="string">&quot; -- is a regular palindrome.&quot;</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(m)    System.out.println(str + <span class="string">&quot; -- is a mirrored string.&quot;</span>);</span><br><span class="line">            <span class="keyword">else</span>                System.out.println(str + <span class="string">&quot; -- is not a palindrome.&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;🪞-字串分類問題筆記：Palindrome-與-Mirrored-String&quot;&gt;&lt;a href=&quot;#🪞-字串分類問題筆記：Palindrome-與-Mirrored-String&quot; class=&quot;headerlink&quot; title=&quot;🪞 字串分類問題筆記：</summary>
      
    
    
    
    
    <category term="UVA" scheme="https://sandrala0413.git/tags/UVA/"/>
    
  </entry>
  
  <entry>
    <title>UVA/CPE 389 - Basically Speaking 解題紀錄</title>
    <link href="https://sandrala0413.git/post/UVA-389.html"/>
    <id>https://sandrala0413.git/post/UVA-389.html</id>
    <published>2025-04-29T19:43:21.000Z</published>
    <updated>2025-05-01T12:44:31.253Z</updated>
    
    <content type="html"><![CDATA[<h2 id="📝-題目簡介"><a href="#📝-題目簡介" class="headerlink" title="📝 題目簡介"></a>📝 題目簡介</h2><p>給定一個數字、一個來源進位（base-n）與一個目標進位（base-m），將該數字從來源進位轉換為目標進位，並輸出結果。若轉換後的結果超過 7 個字元，輸出 <code>ERROR</code>。</p><hr><h2 id="📌-題目輸入格式"><a href="#📌-題目輸入格式" class="headerlink" title="📌 題目輸入格式"></a>📌 題目輸入格式</h2><p>每組輸入包含：</p><ul><li>一個表示數字的字串 <code>str</code>（最多 7 個字元，可能包含 <code>0-9</code> 與 <code>A-Z</code>）</li><li>來源進位 <code>n</code>（2 ≤ n ≤ 16）</li><li>目標進位 <code>m</code>（2 ≤ m ≤ 16）</li></ul><hr><h2 id="📌-題目範例輸入"><a href="#📌-題目範例輸入" class="headerlink" title="📌 題目範例輸入"></a>📌 題目範例輸入</h2><p>1111000 2 10<br>1111000 2 16<br>2102101 3 10<br>2102101 3 15<br>12312 4 2<br>1A 15 2<br>ABCD 16 15<br>03 13 10</p><h2 id="📌-題目範例輸出"><a href="#📌-題目範例輸出" class="headerlink" title="📌 題目範例輸出"></a>📌 題目範例輸出</h2><p>120<br>78<br>1765<br>7CA<br>ERROR<br>11001<br>D071<br>3</p><hr><h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><p>先換成十進制再換成目標進制</p><h2 id="💻-Java-程式碼實作"><a href="#💻-Java-程式碼實作" class="headerlink" title="💻 Java 程式碼實作"></a>💻 Java 程式碼實作</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(in.hasNext())&#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> in.next();</span><br><span class="line">            <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> in.nextInt();   <span class="comment">// base from</span></span><br><span class="line">            <span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> in.nextInt();   <span class="comment">// base to</span></span><br><span class="line">            <span class="type">int</span> <span class="variable">tmp</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// convert to base 10</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; str.length(); i++)&#123;</span><br><span class="line">                <span class="type">char</span> <span class="variable">ch</span> <span class="operator">=</span> str.charAt(i);</span><br><span class="line">                <span class="type">int</span> digit;</span><br><span class="line">                <span class="keyword">if</span>(ch &lt; <span class="string">&#x27;A&#x27;</span>)&#123; <span class="comment">// digit: &#x27;0&#x27;~&#x27;9&#x27;</span></span><br><span class="line">                    digit = ch - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span>&#123; <span class="comment">// letter: &#x27;A&#x27;~&#x27;F&#x27;</span></span><br><span class="line">                    digit = ch - <span class="string">&#x27;A&#x27;</span> + <span class="number">10</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                tmp = tmp * n + digit; <span class="comment">// 累積轉為十進位</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// convert to base m</span></span><br><span class="line">            <span class="type">StringBuilder</span> <span class="variable">str2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">            <span class="keyword">if</span>(tmp == <span class="number">0</span>)&#123;</span><br><span class="line">                str2.append(<span class="string">&quot;0&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">while</span>(tmp &gt; <span class="number">0</span>)&#123;</span><br><span class="line">                    <span class="type">int</span> <span class="variable">digit</span> <span class="operator">=</span> tmp % m;</span><br><span class="line">                    <span class="type">char</span> ch;</span><br><span class="line">                    <span class="keyword">if</span>(digit &gt; <span class="number">9</span>)&#123;</span><br><span class="line">                        ch = (<span class="type">char</span>)(<span class="string">&#x27;A&#x27;</span> + digit - <span class="number">10</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span>&#123;</span><br><span class="line">                        ch = (<span class="type">char</span>)(digit + <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                    str2.append(ch);</span><br><span class="line">                    tmp /= m;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(str2.length() &gt; <span class="number">7</span>)&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;  ERROR&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                System.out.printf(<span class="string">&quot;%7s\n&quot;</span>, str2.reverse());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;📝-題目簡介&quot;&gt;&lt;a href=&quot;#📝-題目簡介&quot; class=&quot;headerlink&quot; title=&quot;📝 題目簡介&quot;&gt;&lt;/a&gt;📝 題目簡介&lt;/h2&gt;&lt;p&gt;給定一個數字、一個來源進位（base-n）與一個目標進位（base-m），將該數字從來源進位轉換為目</summary>
      
    
    
    
    <category term="UVA-一星題" scheme="https://sandrala0413.git/categories/UVA-%E4%B8%80%E6%98%9F%E9%A1%8C/"/>
    
    
    <category term="UVA" scheme="https://sandrala0413.git/tags/UVA/"/>
    
  </entry>
  
  <entry>
    <title>UVA/CPE 386 - Perfect Cubes 題目筆記</title>
    <link href="https://sandrala0413.git/post/UVA-386.html"/>
    <id>https://sandrala0413.git/post/UVA-386.html</id>
    <published>2025-04-29T18:28:19.000Z</published>
    <updated>2025-05-01T12:44:34.225Z</updated>
    
    <content type="html"><![CDATA[<h2 id="📝-題目簡介"><a href="#📝-題目簡介" class="headerlink" title="📝 題目簡介"></a>📝 題目簡介</h2><p>本題要求列出所有符合以下條件的整數組合 <code>(a, b, c, d)</code>：</p><p>a³ &#x3D; b³ + c³ + d³</p><p>條件限制如下：</p><ul><li><code>2 ≤ a ≤ 200</code></li><li><code>2 ≤ b ≤ c ≤ d &lt; a</code></li></ul><hr><h2 id="📌-題目範例輸出"><a href="#📌-題目範例輸出" class="headerlink" title="📌 題目範例輸出"></a>📌 題目範例輸出</h2><p>Cube &#x3D; 6, Triple &#x3D; (3,4,5)<br>Cube &#x3D; 12, Triple &#x3D; (6,8,10)<br>Cube &#x3D; 18, Triple &#x3D; (2,12,16)<br>Cube &#x3D; 18, Triple &#x3D; (9,12,15)<br>Cube &#x3D; 19, Triple &#x3D; (3,10,18)<br>Cube &#x3D; 20, Triple &#x3D; (7,14,17)<br>Cube &#x3D; 24, Triple &#x3D; (12,16,20)</p><hr><h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><p>直覺、暴力破解</p><ol><li>遍歷 <code>a</code> 從 2 到 200</li><li>對於每個 <code>a</code>，計算 <code>a³</code></li><li>接著三層巢狀迴圈，遍歷 <code>b, c, d</code>：<ul><li>條件為 <code>b ≤ c ≤ d &lt; a</code></li><li>確保不重複排列（例如 (2,3,4) 和 (3,2,4) 都不會重複出現）</li></ul></li><li>若 <code>b³ + c³ + d³ == a³</code>，就輸出結果</li></ol><h2 id="💻-Java-程式碼實作"><a href="#💻-Java-程式碼實作" class="headerlink" title="💻 Java 程式碼實作"></a>💻 Java 程式碼實作</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">2</span>; i &lt;= <span class="number">200</span>; i++)&#123;         <span class="comment">// a</span></span><br><span class="line">            <span class="type">int</span> <span class="variable">a3</span> <span class="operator">=</span> i*i*i;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">2</span>; j &lt; i; j++)&#123;         <span class="comment">// b</span></span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> j; k &lt; i; k++)&#123;     <span class="comment">// c</span></span><br><span class="line">                    <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">l</span> <span class="operator">=</span> k; l &lt; i; l++)&#123; <span class="comment">// d</span></span><br><span class="line">                        <span class="type">int</span> <span class="variable">tmp</span> <span class="operator">=</span> j*j*j + k*k*k + l*l*l;</span><br><span class="line">                        <span class="keyword">if</span>(a3 == tmp)&#123;</span><br><span class="line">                            System.out.printf(<span class="string">&quot;Cube = %d, Triple = (%d,%d,%d)\n&quot;</span>, i, j, k, l);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;            </span><br><span class="line">            &#125;  </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;📝-題目簡介&quot;&gt;&lt;a href=&quot;#📝-題目簡介&quot; class=&quot;headerlink&quot; title=&quot;📝 題目簡介&quot;&gt;&lt;/a&gt;📝 題目簡介&lt;/h2&gt;&lt;p&gt;本題要求列出所有符合以下條件的整數組合 &lt;code&gt;(a, b, c, d)&lt;/code&gt;：&lt;/p&gt;</summary>
      
    
    
    
    <category term="UVA-一星題" scheme="https://sandrala0413.git/categories/UVA-%E4%B8%80%E6%98%9F%E9%A1%8C/"/>
    
    
    <category term="UVA" scheme="https://sandrala0413.git/tags/UVA/"/>
    
  </entry>
  
  <entry>
    <title>UVA/CPE 382 - Perfection 解題紀錄</title>
    <link href="https://sandrala0413.git/post/UVA_382.html"/>
    <id>https://sandrala0413.git/post/UVA_382.html</id>
    <published>2025-04-29T17:59:40.000Z</published>
    <updated>2025-05-01T13:00:53.613Z</updated>
    
    <content type="html"><![CDATA[<p>已經一年多沒考過CPE了，最近發現距離大三最後一次CPE只剩20天，突然一股幹勁想把分數衝高一點，偷偷立個Flag要堅持天天刷三題，嗚嗚這真的很難，大一的時候也就一天一題，現在大三事情真的多到爆炸:(<br>但時隔一年刷一星題，不知道是不是我的錯覺，似乎變簡單了哈哈，希望是因為我進步了(畢竟我的程式能力真的很差嗚嗚)<br>好了廢話結束 加油三三!!! </p><h2 id="📝-題目簡介"><a href="#📝-題目簡介" class="headerlink" title="📝 題目簡介"></a>📝 題目簡介</h2><p>UVA 382 的任務是判斷輸入的整數是否為：</p><ul><li><strong>PERFECT（完全數）</strong>：所有真因數的總和等於該數</li><li><strong>ABUNDANT（盈數）</strong>：總和大於該數</li><li><strong>DEFICIENT（虧數）</strong>：總和小於該數</li></ul><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p><strong>真因數</strong>：除了自己以外的正整數因數（包含 1）</p></blockquote><hr><h2 id="📌-題目範例輸入"><a href="#📌-題目範例輸入" class="headerlink" title="📌 題目範例輸入"></a>📌 題目範例輸入</h2><p>15 28 6 56 60000 22 496 0</p><h2 id="📌-題目範例輸出"><a href="#📌-題目範例輸出" class="headerlink" title="📌 題目範例輸出"></a>📌 題目範例輸出</h2><p>PERFECTION OUTPUT<br>15 DEFICIENT<br>28 PERFECT<br>6 PERFECT<br>56 ABUNDANT<br>60000 ABUNDANT<br>22 DEFICIENT<br>496 PERFECT<br>END OF OUTPUT</p><hr><h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><p>直覺做法</p><ol><li>連續讀入整數 <code>n</code>，直到遇到 <code>0</code> 為止（作為結束標記）</li><li>對每個 <code>n</code>：<ul><li>計算所有真因數（小於 <code>n</code> 且可整除 <code>n</code>）</li><li>將真因數加總</li><li>根據總和結果分類為：<ul><li><strong>PERFECT</strong></li><li><strong>ABUNDANT</strong></li><li><strong>DEFICIENT</strong></li></ul></li></ul></li><li>使用格式化輸出對齊（<code>%5d</code>）</li></ol><hr><h2 id="💻-Java-實作程式碼"><a href="#💻-Java-實作程式碼" class="headerlink" title="💻 Java 實作程式碼"></a>💻 Java 實作程式碼</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> in.nextInt();</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;PERFECTION OUTPUT&quot;</span>);</span><br><span class="line">        <span class="keyword">while</span>(n != <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> n / <span class="number">2</span>;</span><br><span class="line">            <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">2</span>; i &lt;= k; i++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(n % i == <span class="number">0</span>)&#123;</span><br><span class="line">                    sum += i;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(sum == n &amp;&amp; n != <span class="number">1</span>)&#123;</span><br><span class="line">                System.out.printf(<span class="string">&quot;%5d  PERFECT&quot;</span>, n);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(sum &gt; n)&#123;</span><br><span class="line">                System.out.printf(<span class="string">&quot;%5d  ABUNDANT&quot;</span>, n);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                System.out.printf(<span class="string">&quot;%5d  DEFICIENT&quot;</span>, n);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(<span class="string">&quot;&quot;</span>);</span><br><span class="line"></span><br><span class="line">            n = in.nextInt();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;END OF OUTPUT&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;已經一年多沒考過CPE了，最近發現距離大三最後一次CPE只剩20天，突然一股幹勁想把分數衝高一點，偷偷立個Flag要堅持天天刷三題，嗚嗚這真的很難，大一的時候也就一天一題，現在大三事情真的多到爆炸:(&lt;br&gt;但時隔一年刷一星題，不知道是不是我的錯覺，似乎變簡單了哈哈，希望是</summary>
      
    
    
    
    <category term="UVA-一星題" scheme="https://sandrala0413.git/categories/UVA-%E4%B8%80%E6%98%9F%E9%A1%8C/"/>
    
    
    <category term="UVA" scheme="https://sandrala0413.git/tags/UVA/"/>
    
  </entry>
  
</feed>
