[{"id":"9347644023c8e570ce932aee4ec9f579","title":"UVA/CPE 389 - Basically Speaking 題目筆記","content":"📝 題目簡介給定一個數字、一個來源進位（base-n）與一個目標進位（base-m），將該數字從來源進位轉換為目標進位，並輸出結果。若轉換後的結果超過 7 個字元，輸出 ERROR。\n\n📌 題目輸入格式每組輸入包含：\n\n一個表示數字的字串 str（最多 7 個字元，可能包含 0-9 與 A-Z）\n來源進位 n（2 ≤ n ≤ 16）\n目標進位 m（2 ≤ m ≤ 16）\n\n\n📌 題目範例輸入1111000 2 101111000 2 162102101 3 102102101 3 1512312 4 21A 15 2ABCD 16 1503 13 10\n📌 題目範例輸出1207817657CAERROR11001D0713\n💻 Java 程式碼實作123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354import java.util.*;public class Main&#123;    public static void main(String[] args)&#123;        Scanner in = new Scanner(System.in);        while(in.hasNext())&#123;            String str = in.next();            int n = in.nextInt();   // base from            int m = in.nextInt();   // base to            int tmp = 0;            // convert to base 10            for(int i = 0; i &lt; str.length(); i++)&#123;                char ch = str.charAt(i);                int digit;                if(ch &lt; &#x27;A&#x27;)&#123; // digit: &#x27;0&#x27;~&#x27;9&#x27;                    digit = ch - &#x27;0&#x27;;                &#125;                else&#123; // letter: &#x27;A&#x27;~&#x27;F&#x27;                    digit = ch - &#x27;A&#x27; + 10;                &#125;                tmp = tmp * n + digit; // 累積轉為十進位            &#125;            // convert to base m            StringBuilder str2 = new StringBuilder();            if(tmp == 0)&#123;                str2.append(&quot;0&quot;);            &#125;            else&#123;                while(tmp &gt; 0)&#123;                    int digit = tmp % m;                    char ch;                    if(digit &gt; 9)&#123;                        ch = (char)(&#x27;A&#x27; + digit - 10);                    &#125;                    else&#123;                        ch = (char)(digit + &#x27;0&#x27;);                    &#125;                    str2.append(ch);                    tmp /= m;                &#125;            &#125;            if(str2.length() &gt; 7)&#123;                System.out.println(&quot;  ERROR&quot;);            &#125;            else&#123;                System.out.printf(&quot;%7s\\n&quot;, str2.reverse());            &#125;        &#125;    &#125;&#125;","slug":"UVA-389","date":"2025-04-29T19:43:21.000Z","categories_index":"","tags_index":"UVA","author_index":"拉粑粑小魔仙"},{"id":"2a4d1d5f71682acd37cb3fc6441d4ab6","title":"UVA/CPE 386 - Perfect Cubes 題目筆記","content":"📝 題目簡介本題要求列出所有符合以下條件的整數組合 (a, b, c, d)：\na³ &#x3D; b³ + c³ + d³\n條件限制如下：\n\n2 ≤ a ≤ 200\n2 ≤ b ≤ c ≤ d &lt; a\n\n\n📌 題目範例輸出Cube &#x3D; 6, Triple &#x3D; (3,4,5)Cube &#x3D; 12, Triple &#x3D; (6,8,10)Cube &#x3D; 18, Triple &#x3D; (2,12,16)Cube &#x3D; 18, Triple &#x3D; (9,12,15)Cube &#x3D; 19, Triple &#x3D; (3,10,18)Cube &#x3D; 20, Triple &#x3D; (7,14,17)Cube &#x3D; 24, Triple &#x3D; (12,16,20)\n\n🧠 解題思路\n遍歷 a 從 2 到 200\n對於每個 a，計算 a³\n接著三層巢狀迴圈，遍歷 b, c, d：\n條件為 b ≤ c ≤ d &lt; a\n確保不重複排列（例如 (2,3,4) 和 (3,2,4) 都不會重複出現）\n\n\n若 b³ + c³ + d³ == a³，就輸出結果\n\n\n💻 Java 程式碼實作1234567891011121314151617181920import java.util.*;public class Main&#123;    public static void main(String[] args)&#123;                for (int i = 2; i &lt;= 200; i++)&#123;         // a            int a3 = i*i*i;            for(int j = 2; j &lt; i; j++)&#123;         // b                for(int k = j; k &lt; i; k++)&#123;     // c                    for(int l = k; l &lt; i; l++)&#123; // d                        int tmp = j*j*j + k*k*k + l*l*l;                        if(a3 == tmp)&#123;                            System.out.printf(&quot;Cube = %d, Triple = (%d,%d,%d)\\n&quot;, i, j, k, l);                        &#125;                    &#125;                &#125;                        &#125;          &#125;    &#125;&#125;","slug":"UVA-386","date":"2025-04-29T18:28:19.000Z","categories_index":"","tags_index":"UVA","author_index":"拉粑粑小魔仙"},{"id":"ff46200548c0845fc7c7eedfb8f543e7","title":"UVA/CPE 382 - Perfection 題目筆記","content":"📝 題目簡介UVA 382 的任務是判斷輸入的整數是否為：\n\nPERFECT（完全數）：所有真因數的總和等於該數\nABUNDANT（盈數）：總和大於該數\nDEFICIENT（虧數）：總和小於該數\n\n\n\n\n\n\n\n\n\n\n真因數：除了自己以外的正整數因數（包含 1）\n\n📌 題目範例輸入15 28 6 56 60000 22 496 0\n📌 題目範例輸出PERFECTION OUTPUT15 DEFICIENT28 PERFECT6 PERFECT56 ABUNDANT60000 ABUNDANT22 DEFICIENT496 PERFECTEND OF OUTPUT\n\n🧠 解題思路\n連續讀入整數 n，直到遇到 0 為止（作為結束標記）\n對每個 n：\n計算所有真因數（小於 n 且可整除 n）\n將真因數加總\n根據總和結果分類為：\nPERFECT\nABUNDANT\nDEFICIENT\n\n\n\n\n使用格式化輸出對齊（%5d）\n\n\n💻 Java 實作程式碼12345678910111213141516171819202122232425262728293031323334import java.util.*;public class Main&#123;    public static void main(String[] args)&#123;        Scanner in = new Scanner(System.in);        int n = in.nextInt();        System.out.println(&quot;PERFECTION OUTPUT&quot;);        while(n != 0)&#123;            int k = n / 2;            int sum = 1;            for(int i = 2; i &lt;= k; i++)&#123;                if(n % i == 0)&#123;                    sum += i;                &#125;            &#125;            if(sum == n &amp;&amp; n != 1)&#123;                System.out.printf(&quot;%5d  PERFECT&quot;, n);            &#125;            else if(sum &gt; n)&#123;                System.out.printf(&quot;%5d  ABUNDANT&quot;, n);            &#125;            else&#123;                System.out.printf(&quot;%5d  DEFICIENT&quot;, n);            &#125;            System.out.println(&quot;&quot;);            n = in.nextInt();        &#125;        System.out.println(&quot;END OF OUTPUT&quot;);    &#125;&#125;","slug":"UVA_382","date":"2025-04-29T17:59:40.000Z","categories_index":"","tags_index":"UVA","author_index":"拉粑粑小魔仙"}]