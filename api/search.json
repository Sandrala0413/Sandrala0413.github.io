[{"id":"43fdd66da3d967ab09f8efe78206016e","title":"UVA/CPE 409 - Excuses, Excuses! 解題筆記","content":"📘 題目簡述Judge Ito 想找出藉口最多「爛藉口關鍵字」的藉口。每一組資料包含若干關鍵字與藉口，找出那些包含關鍵字最多次的藉口。\n\n📥 輸入格式\n每組關鍵字皆為全小寫、長度 1~20，且只有英文字母。\n每行藉口最大長度為 70，內容可含任意大小寫字母、數字、空格與下列標點符號：. , ! ?\n\n\n📤 輸出格式\n每組輸出以 Excuse Set #X 為開頭，X 為組別編號（從 1 開始）。\n然後印出 關鍵字出現最多次的藉口（可多個，順序不限）。\n每組輸出之間需空一行。\n\n\n🧠 判斷關鍵字出現規則\n不分大小寫比對\n只比對整個單字，不能是字的一部分，例如：\n關鍵字 dog，在 dog.、my-dog、dog! 都算\n在 doggie 中則不算\n\n\n\n\n📌 題目範例輸入5 3dogatehomeworkcanarydiedMy dog ate my homework.Can you believe my dog died after eating my canary… AND MY HOMEWORK?This excuse is so good that it contain 0 keywords.6 5superhighwaycrazythermonuclearbedroomwarbuildingI am having a superhighway built in my bedroom.I am actually crazy.1234567890…..,,,,,0987654321?????!!!!!!There was a thermonuclear war!I ate my dog, my canary, and my homework … note outdated keywords?\n\n📌 題目範例輸出Excuse Set #1Can you believe my dog died after eating my canary… AND MY HOMEWORK?Excuse Set #2I am having a superhighway built in my bedroom.There was a thermonuclear war!\nJava程式碼實作123456789101112131415161718192021222324252627282930313233343536373839404142434445import java.util.*;public class Main&#123;    public static void main(String[] args)&#123;        Scanner in = new Scanner(System.in);        int index = 1;        while(in.hasNext())&#123;            int n = in.nextInt();   //# of keywords            int m = in.nextInt();   //# of excues            in.nextLine();            String[] keyword_list = new String[n];            String[] excue_list = new String[m];                        for(int i = 0; i &lt; n; i++)  keyword_list[i] = in.nextLine();            for(int i = 0; i &lt; m; i ++) excue_list[i] = in.nextLine();            int[] times = new int[m];            int max = -1;            for(int i = 0; i &lt; m; i++)&#123;                int tmp = 0;                String[] str = excue_list[i].split(&quot;[^a-zA-Z]+&quot;);                for(int j = 0; j &lt; n; j ++)&#123;                    for(int k = 0; k &lt; str.length; k++)&#123;                        if(str[k].toLowerCase().equals(keyword_list[j]))&#123;                            tmp++;                        &#125;                    &#125;                &#125;                if(tmp &gt; max)   max = tmp;                times[i] = tmp;            &#125;                        System.out.println(&quot;Excuse Set #&quot; + index);            for(int i = 0; i &lt; m; i++)&#123;                if(times[i] == max)&#123;                    System.out.println(excue_list[i]);                &#125;            &#125;            System.out.println(&quot;&quot;);            index++;        &#125;    &#125;&#125;","slug":"UVA-409","date":"2025-05-01T12:37:41.000Z","categories_index":"UVA-一星題","tags_index":"UVA","author_index":"三三"},{"id":"557c8ca7130fbc06608465477be51f44","title":"UVACPE 401 - Palindromes 解題紀錄","content":"🪞 字串分類問題筆記：Palindrome 與 Mirrored String📌 題目說明給定一組輸入字串，請判斷其屬於以下哪一類：\n\n不是 Palindrome，也不是 Mirrored String：-- is not a palindrome.\n是 Palindrome，但不是 Mirrored String：-- is a regular palindrome.\n是 Mirrored String，但不是 Palindrome：-- is a mirrored string.\n同時是 Palindrome 與 Mirrored String：-- is a mirrored palindrome.\n\n\n🔁 名詞解釋\n\n\n名稱\n說明\n範例\n\n\n\nPalindrome\n正反都一樣的字串\nABCDEDCBA\n\n\nMirrored String\n把每個字元換成「對應的鏡像字元」，再反過來看仍等於原字串\n3AIAE\n\n\nMirrored Palindrome\n同時符合 Palindrome 和 Mirrored String\nATOYOTA\n\n\n\n🔄 鏡像字元對照表\n\n\n字元\n鏡像\n字元\n鏡像\n字元\n鏡像\n\n\n\nA\nA\nM\nM\nY\nY\n\n\nB\n\nN\n\nZ\n5\n\n\nC\n\nO\nO\n1\n1\n\n\nD\n\nP\n\n2\nS\n\n\nE\n3\nQ\n\n3\nE\n\n\nF\n\nR\n\n4\n\n\n\nG\n\nS\n2\n5\nZ\n\n\nH\nH\nT\nT\n6\n\n\n\nI\nI\nU\nU\n7\n\n\n\nJ\nL\nV\nV\n8\n8\n\n\nK\n\nW\nW\n9\n\n\n\nL\nJ\nX\nX\n\n\n\n\n\n\n\n\n\n\n\n\n\n⚠️ 注意：0（零）不被視為合法字元，只接受 O（英文字母）\n\n📌 題目輸入格式\n每行輸入包含1-20個有效字元(不會有無效字元出現)\n讀到EOF結束\n\n\n📌 題目範例輸入NOTAPALINDROMEISAPALINILAPASI2A3MEASATOYOTA\n📌 題目範例輸出NOTAPALINDROME – is not a palindrome.\nISAPALINILAPASI – is a regular palindrome.\n2A3MEAS – is a mirrored string.\nATOYOTA – is a mirrored palindrome.\n\n\n\n\n\n\n\n\n\n⚠️ 注意：每個輸出之間後面都要空一行\n\n解題思路直覺做\nstep1:判斷是否為 Palindrome：\n判斷字串正反是否相同即可。\n\nstep:2判斷是否為 Mirrored String：\n將每個字元換成其鏡像（若無對應則不合法）。\n換完後反轉字串，看是否與原字串相同。\n\n💻 Java 程式碼實作1234567891011121314151617181920212223242526272829303132333435363738394041424344import java.util.*;public class Main&#123;    public static void main(String[] args)&#123;        Scanner in = new Scanner(System.in);        Map&lt;Character, Character&gt; map = new HashMap&lt;Character, Character&gt;();        map.put(&#x27;A&#x27;, &#x27;A&#x27;); map.put(&#x27;E&#x27;, &#x27;3&#x27;);        map.put(&#x27;H&#x27;, &#x27;H&#x27;); map.put(&#x27;I&#x27;, &#x27;I&#x27;);        map.put(&#x27;J&#x27;, &#x27;L&#x27;); map.put(&#x27;L&#x27;, &#x27;J&#x27;);        map.put(&#x27;M&#x27;, &#x27;M&#x27;); map.put(&#x27;O&#x27;, &#x27;O&#x27;);        map.put(&#x27;S&#x27;, &#x27;2&#x27;); map.put(&#x27;T&#x27;, &#x27;T&#x27;);        map.put(&#x27;U&#x27;, &#x27;U&#x27;); map.put(&#x27;V&#x27;, &#x27;V&#x27;);        map.put(&#x27;W&#x27;, &#x27;W&#x27;); map.put(&#x27;X&#x27;, &#x27;X&#x27;);        map.put(&#x27;Y&#x27;, &#x27;Y&#x27;); map.put(&#x27;Z&#x27;, &#x27;5&#x27;);        map.put(&#x27;1&#x27;, &#x27;1&#x27;); map.put(&#x27;2&#x27;, &#x27;S&#x27;);        map.put(&#x27;3&#x27;, &#x27;E&#x27;); map.put(&#x27;5&#x27;, &#x27;Z&#x27;);        map.put(&#x27;8&#x27;, &#x27;8&#x27;);        while(in.hasNext())&#123;            boolean p = false;            boolean m = true;            String str = in.nextLine();            StringBuilder str2 = new StringBuilder(str);            if(str.equals(str2.reverse().toString()))&#123;                p = true;            &#125;            for(int i = 0; i &lt; str.length(); i++)&#123;                char ch = str.charAt(i);                char ch2 = str.charAt(str.length() - i - 1);                if(!map.containsKey(ch) || map.get(ch) != ch2)&#123;                    m = false;                    break;                &#125;            &#125;            if(p &amp;&amp; m)          System.out.println(str + &quot; -- is a mirrored palindrome.&quot;);            else if(p)     System.out.println(str + &quot; -- is a regular palindrome.&quot;);            else if(m)    System.out.println(str + &quot; -- is a mirrored string.&quot;);            else                System.out.println(str + &quot; -- is not a palindrome.&quot;);            System.out.println(&quot;&quot;);        &#125;    &#125;&#125;","slug":"UVA-401","date":"2025-05-01T12:27:06.000Z","categories_index":"UVA-一星題","tags_index":"UVA","author_index":"三三"},{"id":"07dad403822cb5976aa6ae04771f9d6c","title":"UVA/CPE 389 - Basically Speaking 解題紀錄","content":"📝 題目簡介給定一個數字、一個來源進位（base-n）與一個目標進位（base-m），將該數字從來源進位轉換為目標進位，並輸出結果。若轉換後的結果超過 7 個字元，輸出 ERROR。\n\n📌 題目輸入格式每組輸入包含：\n\n一個表示數字的字串 str（最多 7 個字元，可能包含 0-9 與 A-Z）\n來源進位 n（2 ≤ n ≤ 16）\n目標進位 m（2 ≤ m ≤ 16）\n\n\n📌 題目範例輸入1111000 2 101111000 2 162102101 3 102102101 3 1512312 4 21A 15 2ABCD 16 1503 13 10\n📌 題目範例輸出1207817657CAERROR11001D0713\n\n解題思路先換成十進制再換成目標進制\n💻 Java 程式碼實作123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354import java.util.*;public class Main&#123;    public static void main(String[] args)&#123;        Scanner in = new Scanner(System.in);        while(in.hasNext())&#123;            String str = in.next();            int n = in.nextInt();   // base from            int m = in.nextInt();   // base to            int tmp = 0;            // convert to base 10            for(int i = 0; i &lt; str.length(); i++)&#123;                char ch = str.charAt(i);                int digit;                if(ch &lt; &#x27;A&#x27;)&#123; // digit: &#x27;0&#x27;~&#x27;9&#x27;                    digit = ch - &#x27;0&#x27;;                &#125;                else&#123; // letter: &#x27;A&#x27;~&#x27;F&#x27;                    digit = ch - &#x27;A&#x27; + 10;                &#125;                tmp = tmp * n + digit; // 累積轉為十進位            &#125;            // convert to base m            StringBuilder str2 = new StringBuilder();            if(tmp == 0)&#123;                str2.append(&quot;0&quot;);            &#125;            else&#123;                while(tmp &gt; 0)&#123;                    int digit = tmp % m;                    char ch;                    if(digit &gt; 9)&#123;                        ch = (char)(&#x27;A&#x27; + digit - 10);                    &#125;                    else&#123;                        ch = (char)(digit + &#x27;0&#x27;);                    &#125;                    str2.append(ch);                    tmp /= m;                &#125;            &#125;            if(str2.length() &gt; 7)&#123;                System.out.println(&quot;  ERROR&quot;);            &#125;            else&#123;                System.out.printf(&quot;%7s\\n&quot;, str2.reverse());            &#125;        &#125;    &#125;&#125;","slug":"UVA-389","date":"2025-04-29T19:43:21.000Z","categories_index":"UVA-一星題","tags_index":"UVA","author_index":"三三"},{"id":"2a4d1d5f71682acd37cb3fc6441d4ab6","title":"UVA/CPE 386 - Perfect Cubes 題目筆記","content":"📝 題目簡介本題要求列出所有符合以下條件的整數組合 (a, b, c, d)：\na³ &#x3D; b³ + c³ + d³\n條件限制如下：\n\n2 ≤ a ≤ 200\n2 ≤ b ≤ c ≤ d &lt; a\n\n\n📌 題目範例輸出Cube &#x3D; 6, Triple &#x3D; (3,4,5)Cube &#x3D; 12, Triple &#x3D; (6,8,10)Cube &#x3D; 18, Triple &#x3D; (2,12,16)Cube &#x3D; 18, Triple &#x3D; (9,12,15)Cube &#x3D; 19, Triple &#x3D; (3,10,18)Cube &#x3D; 20, Triple &#x3D; (7,14,17)Cube &#x3D; 24, Triple &#x3D; (12,16,20)\n\n解題思路直覺、暴力破解\n\n遍歷 a 從 2 到 200\n對於每個 a，計算 a³\n接著三層巢狀迴圈，遍歷 b, c, d：\n條件為 b ≤ c ≤ d &lt; a\n確保不重複排列（例如 (2,3,4) 和 (3,2,4) 都不會重複出現）\n\n\n若 b³ + c³ + d³ == a³，就輸出結果\n\n💻 Java 程式碼實作1234567891011121314151617181920import java.util.*;public class Main&#123;    public static void main(String[] args)&#123;                for (int i = 2; i &lt;= 200; i++)&#123;         // a            int a3 = i*i*i;            for(int j = 2; j &lt; i; j++)&#123;         // b                for(int k = j; k &lt; i; k++)&#123;     // c                    for(int l = k; l &lt; i; l++)&#123; // d                        int tmp = j*j*j + k*k*k + l*l*l;                        if(a3 == tmp)&#123;                            System.out.printf(&quot;Cube = %d, Triple = (%d,%d,%d)\\n&quot;, i, j, k, l);                        &#125;                    &#125;                &#125;                        &#125;          &#125;    &#125;&#125;","slug":"UVA-386","date":"2025-04-29T18:28:19.000Z","categories_index":"UVA-一星題","tags_index":"UVA","author_index":"三三"},{"id":"8c9b283df3eeb7012c1e443828b00869","title":"UVA/CPE 382 - Perfection 解題紀錄","content":"已經一年多沒考過CPE了，最近發現距離大三最後一次CPE只剩20天，突然一股幹勁想把分數衝高一點，偷偷立個Flag要堅持天天刷三題，嗚嗚這真的很難，大一的時候也就一天一題，現在大三事情真的多到爆炸:(但時隔一年刷一星題，不知道是不是我的錯覺，似乎變簡單了哈哈，希望是因為我進步了(畢竟我的程式能力真的很差嗚嗚)好了廢話結束 加油三三!!! \n📝 題目簡介UVA 382 的任務是判斷輸入的整數是否為：\n\nPERFECT（完全數）：所有真因數的總和等於該數\nABUNDANT（盈數）：總和大於該數\nDEFICIENT（虧數）：總和小於該數\n\n\n\n\n\n\n\n\n\n\n真因數：除了自己以外的正整數因數（包含 1）\n\n📌 題目範例輸入15 28 6 56 60000 22 496 0\n📌 題目範例輸出PERFECTION OUTPUT15 DEFICIENT28 PERFECT6 PERFECT56 ABUNDANT60000 ABUNDANT22 DEFICIENT496 PERFECTEND OF OUTPUT\n\n解題思路直覺做法\n\n連續讀入整數 n，直到遇到 0 為止（作為結束標記）\n對每個 n：\n計算所有真因數（小於 n 且可整除 n）\n將真因數加總\n根據總和結果分類為：\nPERFECT\nABUNDANT\nDEFICIENT\n\n\n\n\n使用格式化輸出對齊（%5d）\n\n\n💻 Java 實作程式碼12345678910111213141516171819202122232425262728293031323334import java.util.*;public class Main&#123;    public static void main(String[] args)&#123;        Scanner in = new Scanner(System.in);        int n = in.nextInt();        System.out.println(&quot;PERFECTION OUTPUT&quot;);        while(n != 0)&#123;            int k = n / 2;            int sum = 1;            for(int i = 2; i &lt;= k; i++)&#123;                if(n % i == 0)&#123;                    sum += i;                &#125;            &#125;            if(sum == n &amp;&amp; n != 1)&#123;                System.out.printf(&quot;%5d  PERFECT&quot;, n);            &#125;            else if(sum &gt; n)&#123;                System.out.printf(&quot;%5d  ABUNDANT&quot;, n);            &#125;            else&#123;                System.out.printf(&quot;%5d  DEFICIENT&quot;, n);            &#125;            System.out.println(&quot;&quot;);            n = in.nextInt();        &#125;        System.out.println(&quot;END OF OUTPUT&quot;);    &#125;&#125;","slug":"UVA_382","date":"2025-04-29T17:59:40.000Z","categories_index":"UVA-一星題","tags_index":"UVA","author_index":"三三"}]